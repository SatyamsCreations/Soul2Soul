---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import { formatDate } from '../../lib/posts';
const base = import.meta.env.BASE_URL;

export async function getStaticPaths() {
  const posts = await getCollection('posts', ({ data }) => !data.draft);
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content, headings } = await post.render();
---

<BaseLayout title={`${post.data.title} — Soul2Soul`} description={post.data.description}>
  <section class="bg-gradient-to-b from-neutral-50 to-white dark:from-neutral-950 dark:to-neutral-950 border-b border-neutral-200/70 dark:border-neutral-800/70">
    <div class="mx-auto max-w-3xl px-4 sm:px-6 lg:px-8 py-10">
      <a href={base} class="text-sm text-neutral-600 dark:text-neutral-300 hover:underline">&larr; Back to home</a>
      <h1 class="display-heading mt-3 text-3xl sm:text-4xl">
        {post.data.title}
      </h1>
      <div class="mt-3 flex flex-wrap items-center gap-3 text-sm text-neutral-600 dark:text-neutral-300">
        <time datetime={new Date(post.data.date).toISOString()}>{formatDate(post.data.date)}</time>
        {post.data.tags?.length ? (
          <>
            <span aria-hidden="true">•</span>
            <div class="flex gap-1">
              {post.data.tags.map((t) => (
                <a href={`${base}tags/${encodeURIComponent(t)}/`} class="inline-flex items-center rounded-full bg-neutral-100 dark:bg-neutral-900 border border-neutral-200 dark:border-neutral-800 px-2 py-0.5 text-[11px] text-neutral-700 dark:text-neutral-300 hover:underline">
                  {t}
                </a>
              ))}
            </div>
          </>
        ) : null}
      </div>
    </div>
  </section>

  <article class="mx-auto max-w-3xl px-4 sm:px-6 lg:px-8 py-10">
    <div class="prose mx-auto">
      <Content />
    </div>
  </article>
</BaseLayout>
